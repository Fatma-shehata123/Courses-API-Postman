{
	"info": {
		"_postman_id": "36488de2-0f15-40b1-8bc1-647c60a2af30",
		"name": "courses API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47931120",
		"_collection_link": "https://fatma-shehata-s-team.postman.co/workspace/Team-Workspace~64f37444-be0d-4f4a-87c3-a396d9ef27f1/collection/47931120-36488de2-0f15-40b1-8bc1-647c60a2af30?action=share&source=collection_link&creator=47931120"
	},
	"item": [
		{
			"name": "Positive Test",
			"item": [
				{
					"name": "LogIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var JsonFile = pm.response.json();\r",
									"var AccessToken = JsonFile.accessToken\r",
									"pm.environment.set(\"AccessToken\", AccessToken);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 700ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(JsonFile.user.email).to.eql(\"fatma@gmail.com\");\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"fatma@gmail.com\",\r\n  \"password\": \"bestPassw0rd\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create New Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var JsonFile = pm.response.json()\r",
									"var CourseId =JsonFile.id \r",
									"pm.environment.set(\"CourseId\", CourseId);\r",
									"\r",
									"pm.test(\"Check if the status equal 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(JsonFile.title).to.eql(\"Cypress\");\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Cypress\",\r\n    \"description\": \"full Cypress course from zero to hero\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/660/courses",
							"host": [
								"{{url}}"
							],
							"path": [
								"660",
								"courses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var JsonFile = pm.response.json();\r",
									"pm.test(\"Check if the status equal 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(JsonFile.title).to.eql(\"Cypress\");\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/660/courses/{{CourseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"660",
								"courses",
								"{{CourseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var JsonFile = pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    pm.expect(JsonFile.title).to.eql(\"Java\");\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Java\",\r\n    \"description\": \"full Java course from zero to hero\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/660/courses/{{CourseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"660",
								"courses",
								"{{CourseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Courses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var JsonFile = pm.response.json();\r",
									"pm.test(\"Check if the status equal 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"first course\", function () {\r",
									"    pm.expect(JsonFile[0].title).to.eql(\"postman\");\r",
									"});\r",
									"pm.test(\"second course\", function () {\r",
									"    pm.expect(JsonFile[1].title).to.eql(\"Appuim\");\r",
									"});\r",
									"pm.test(\"third course\", function () {\r",
									"    pm.expect(JsonFile[2].title).to.eql(\"selenuim\");\r",
									"});\r",
									"pm.test(\"fourth course\", function () {\r",
									"    pm.expect(JsonFile[3].title).to.eql(\"Cypress\");\r",
									"});\r",
									"pm.test(\"fifth course\", function () {\r",
									"    pm.expect(JsonFile[4].title).to.eql(\"Java\");\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/660/courses",
							"host": [
								"{{url}}"
							],
							"path": [
								"660",
								"courses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if the status equal 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/660/courses/{{CourseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"660",
								"courses",
								"{{CourseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get after delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if the status equal 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AccessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/660/courses",
							"host": [
								"{{url}}"
							],
							"path": [
								"660",
								"courses"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}